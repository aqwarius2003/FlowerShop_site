from django.db.models.signals import post_save
from django.dispatch import receiver
from .models import Order, Consultation, ShopUser
from .telegram_service import TelegramNotifier
import logging

logger = logging.getLogger(__name__)

@receiver(post_save, sender=Order)
def notify_order_created(sender, instance, created, **kwargs):
    logger.info(f"Signal received for Order. Created: {created}")
    if created:
        logger.info("–°—Ä–∞–±–æ—Ç–∞–ª —Å–∏–≥–Ω–∞–ª –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞")
        message = (
            f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{instance.id}\n"
            f"–ö–ª–∏–µ–Ω—Ç: {instance.user.full_name}\n"
            f"–ê–¥—Ä–µ—Å: {instance.delivery_address}"
        )
        result = TelegramNotifier.send_message(message)
        logger.info(f"Message sent to Telegram: {result}")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        managers = ShopUser.objects.filter(status='manager')
        for manager in managers:
            TelegramNotifier.send_message(f"–ú–µ–Ω–µ–¥–∂–µ—Ä—É: {manager.full_name}\n{message}")

@receiver(post_save, sender=Consultation)
def notify_consultation_created(sender, instance, created, **kwargs):
    logger.info(f"Signal received for Consultation. Created: {created}")
    if created:
        message = (
            f"üìû –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {instance.user.phone}\n"
            f"–í—Ä–µ–º—è: {instance.creation_date}"
        )
        result = TelegramNotifier.send_message(message)
        logger.info(f"Message sent to Telegram: {result}")
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        managers = ShopUser.objects.filter(status='manager')
        for manager in managers:
            TelegramNotifier.send_message(f"–ú–µ–Ω–µ–¥–∂–µ—Ä—É: {manager.full_name}\n{message}")