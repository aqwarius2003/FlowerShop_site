from django.shortcuts import get_object_or_404, redirect
from django.contrib import messages
from .models import Order, ShopUser
from .telegram_service import TelegramNotifier
import logging

logger = logging.getLogger(__name__)

def assign_deliverer_confirm(request):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞.
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã, –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    """
    if request.method != 'POST':
        messages.error(request, "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞")
        return redirect('admin:flowershopservice_order_changelist')
    
    order_id = request.POST.get('order_id')
    deliverer_id = request.POST.get('deliverer')
    should_notify_managers = request.POST.get('notify_manager') == 'on'
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    if not order_id or not deliverer_id:
        messages.error(request, "–ù–µ —É–∫–∞–∑–∞–Ω –∑–∞–∫–∞–∑ –∏–ª–∏ –¥–æ—Å—Ç–∞–≤—â–∏–∫")
        return redirect('admin:flowershopservice_order_changelist')
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞
        order = get_object_or_404(Order, id=order_id)
        deliverer = get_object_or_404(
            ShopUser, id=deliverer_id, status='delivery'
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑
        order.delivery_person = deliverer
        order.status = 'inDelivery'
        order.save()
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
        logger.info(
            f"–ó–∞–∫–∞–∑ #{order.id} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞ {deliverer.full_name} "
            f"–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å '–í –¥–æ—Å—Ç–∞–≤–∫–µ'"
        )
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        messages.success(
            request, 
            f"–ó–∞–∫–∞–∑ ‚Ññ{order.id} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞ {deliverer.full_name} "
            f"–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å '–í –¥–æ—Å—Ç–∞–≤–∫–µ'"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram ID –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if deliverer.telegram_id:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞
            message = (
                f"üöö –ó–∞–∫–∞–∑ #{order.id} –≥–æ—Ç–æ–≤ –∫ –¥–æ—Å—Ç–∞–≤–∫–µ!\n"
                f"–ö–ª–∏–µ–Ω—Ç: {order.user.full_name}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.user.phone}\n"
                f"–ë—É–∫–µ—Ç: {order.product_name}\n"
                f"–ê–¥—Ä–µ—Å: {order.delivery_address}\n"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
            if order.delivery_date:
                message += f"–î–∞—Ç–∞: {order.delivery_date.strftime('%d.%m.%Y')}\n"
                
            if order.is_express_delivery:
                message += "‚ö° –°–†–û–ß–ù–ê–Ø –¥–æ—Å—Ç–∞–≤–∫–∞!"
            elif order.delivery_time_from and order.delivery_time_to:
                from_time = order.delivery_time_from.strftime('%H:%M')
                to_time = order.delivery_time_to.strftime('%H:%M')
                message += f"–í—Ä–µ–º—è: —Å {from_time} –¥–æ {to_time}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤—â–∏–∫—É
            delivery_message = (
                f"üëã {deliverer.full_name}, "
                f"—É –≤–∞—Å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É!\n\n{message}"
            )
            success = TelegramNotifier.send_to_user(
                deliverer.telegram_id,
                delivery_message
            )
            
            if success:
                logger.info(
                    f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #{order.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ "
                    f"–¥–æ—Å—Ç–∞–≤—â–∏–∫—É {deliverer.full_name}"
                )
                messages.success(
                    request, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–æ—Å—Ç–∞–≤—â–∏–∫—É."
                )
            else:
                logger.warning(
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤—â–∏–∫—É "
                    f"{deliverer.full_name} –æ –∑–∞–∫–∞–∑–µ #{order.id}"
                )
                messages.warning(
                    request, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤—â–∏–∫—É."
                )
        else:
            messages.warning(
                request,
                f"–£ –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞ {deliverer.full_name} –Ω–µ —É–∫–∞–∑–∞–Ω Telegram ID. "
                f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"
            )
            
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        if should_notify_managers:
            from .signals import send_to_managers
            
            manager_message = (
                f"üìã –ó–∞–∫–∞–∑ #{order.id} –ø–µ—Ä–µ–¥–∞–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É\n"
                f"–î–æ—Å—Ç–∞–≤—â–∏–∫: {deliverer.full_name}\n"
                f"–ö–ª–∏–µ–Ω—Ç: {order.user.full_name}\n"
                f"–ë—É–∫–µ—Ç: {order.product_name}"
            )
            
            send_to_managers(manager_message)
            
            logger.info(
                f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{order.id} "
                f"–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º"
            )
        
        return redirect('admin:flowershopservice_order_changelist')
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞: {str(e)}")
        messages.error(request, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        return redirect('admin:flowershopservice_order_changelist') 